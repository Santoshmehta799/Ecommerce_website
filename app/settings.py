"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-tct3d3kw(!&c!tht#(zr)zo705l5q4*t7)rcc-jg_!0%pj_7nu'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # third party pakages
    'widget_tweaks',

    # django app
    'app_user',
    'app_verification',
    'app_dashboard',
    'app_context',
    'app_inventory'

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'app.urls'

TEMPLATES_DIRS = os.path.join(BASE_DIR,'templates')
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIRS, ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'sellerwebsite',
        'USER': 'postgres',
        'PASSWORD': 'root',
        'HOST': '127.0.0.1', 
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / "static",
]
# STATIC_ROOT = os.path.join(BASE_DIR,'static')

MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR,'media')


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


AUTH_USER_MODEL = "app_user.User"


# # corsheaders settings
# # https://pypi.org/project/django-cors-headers/
# CORS_ALLOWED_ORIGINS = [
#     #"https://example.com",
#     #"https://sub.example.com",
#     "http://localhost:3000",
#     # "http://127.0.0.1:3000",
# ]


# Email Credentials
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
# EMAIL_HOST_USER = config('EMAIL_HOST_USER', 'ravipatel4075@gmail.com') # gmail email id to send email
# EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', 'kdbdvzlidscvjhnt') # gmail password
EMAIL_HOST_USER = 'ravipatel4075@gmail.com'
EMAIL_HOST_PASSWORD = 'kdbdvzlidscvjhnt'
ADMIN_EMAILS = ['ravichovatiya120@gmail.com',] # admin emails



# # urls define of api
LOGIN_URL = '/user/auth/signin/'

# bootstrap messages alert
from django.contrib.messages import constants as message_constants
MESSAGE_LEVEL = message_constants.DEBUG

from django.contrib.messages import constants as messages

MESSAGE_TAGS = {
    messages.DEBUG: 'alert-info',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}


# loggings

#  created log to check the bugs and errors
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',  # Adjust the logging level as needed
            'class': 'logging.FileHandler',
            'filename': 'logfile.log',  # Specify the log file name and path
        },
    },
    'root': {
        'handlers': ['file'],
        'level': 'DEBUG',  # Adjust the logging level as needed
    },
}

# sendbox authentication

SANDBOX_AUTH_TOKEN_URL = "https://api.sandbox.co.in/authenticate"
SANDBOX_GST_VERIFY_URL = "https://api.sandbox.co.in/gsp/public/gstin"
SANDBOX_CIN_VERIFY_URL = "https://api.sandbox.co.in/mca/companies"
SANDBOX_PAN_VERIFY_URL = "https://api.sandbox.co.in/pans"
SANDBOX_BANK_VERIFY_URL = "https://api.sandbox.co.in/bank"
SANDBOX_API_KEY = "key_live_zZJHlCovjAIx5mg7FZio1G3jFG5mnMyv"
SANDBOX_SECRET_KEY = "secret_live_Fwu14Q1dlNRhbVFmVOx7XVingFi6abUu"
